// Generated from AMOS.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,92,645,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,
70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,2,
85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,1,0,
1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,
1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,
1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,
10,1,10,1,11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,
16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,
1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,
20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,
1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,
25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,
1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,
30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,
1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,
36,1,36,1,36,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,40,
1,40,1,40,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,
44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,3,46,
428,8,46,1,46,4,46,431,8,46,11,46,12,46,432,1,47,1,47,1,47,1,47,1,47,1,47,
1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,50,1,50,5,50,452,8,50,10,
50,12,50,455,9,50,1,50,1,50,1,51,4,51,460,8,51,11,51,12,51,461,1,51,1,51,
1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,
53,1,53,1,53,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,56,1,56,5,56,
494,8,56,10,56,12,56,497,9,56,1,56,1,56,1,57,1,57,1,57,1,58,1,58,1,58,1,
58,1,58,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,62,
1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,
65,1,65,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,
1,67,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,
69,1,69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,71,
1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,
73,1,73,5,73,596,8,73,10,73,12,73,599,9,73,1,74,1,74,1,74,1,74,1,74,1,74,
1,74,1,74,1,74,3,74,610,8,74,1,75,1,75,1,76,1,76,1,77,1,77,1,78,1,78,1,79,
1,79,1,80,1,80,1,81,1,81,1,82,1,82,1,83,1,83,1,84,1,84,1,85,1,85,1,86,1,
86,1,87,1,87,1,88,1,88,1,89,1,89,1,90,1,90,1,91,1,91,0,0,92,1,1,3,2,5,3,
7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,
17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,
29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,
41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,
53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,
127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,
74,149,75,151,76,153,77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,
169,85,171,86,173,87,175,88,177,89,179,90,181,91,183,92,1,0,6,1,0,48,57,
2,0,10,10,13,13,3,0,9,10,13,13,32,32,1,0,34,34,3,0,65,90,95,95,97,122,4,
0,48,57,65,90,95,95,97,122,655,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,
0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,
19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,
0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,
0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,
0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,
75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,
0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,
1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,
0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,
0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,
0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,
139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,
1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,
0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,
0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,
0,0,181,1,0,0,0,0,183,1,0,0,0,1,185,1,0,0,0,3,189,1,0,0,0,5,194,1,0,0,0,
7,198,1,0,0,0,9,201,1,0,0,0,11,207,1,0,0,0,13,213,1,0,0,0,15,218,1,0,0,0,
17,225,1,0,0,0,19,231,1,0,0,0,21,237,1,0,0,0,23,241,1,0,0,0,25,243,1,0,0,
0,27,247,1,0,0,0,29,254,1,0,0,0,31,261,1,0,0,0,33,267,1,0,0,0,35,272,1,0,
0,0,37,279,1,0,0,0,39,283,1,0,0,0,41,290,1,0,0,0,43,298,1,0,0,0,45,303,1,
0,0,0,47,309,1,0,0,0,49,314,1,0,0,0,51,320,1,0,0,0,53,329,1,0,0,0,55,337,
1,0,0,0,57,344,1,0,0,0,59,348,1,0,0,0,61,352,1,0,0,0,63,358,1,0,0,0,65,365,
1,0,0,0,67,370,1,0,0,0,69,376,1,0,0,0,71,380,1,0,0,0,73,383,1,0,0,0,75,387,
1,0,0,0,77,391,1,0,0,0,79,395,1,0,0,0,81,398,1,0,0,0,83,401,1,0,0,0,85,403,
1,0,0,0,87,406,1,0,0,0,89,408,1,0,0,0,91,414,1,0,0,0,93,427,1,0,0,0,95,434,
1,0,0,0,97,441,1,0,0,0,99,447,1,0,0,0,101,449,1,0,0,0,103,459,1,0,0,0,105,
465,1,0,0,0,107,474,1,0,0,0,109,482,1,0,0,0,111,486,1,0,0,0,113,491,1,0,
0,0,115,500,1,0,0,0,117,503,1,0,0,0,119,508,1,0,0,0,121,512,1,0,0,0,123,
515,1,0,0,0,125,520,1,0,0,0,127,523,1,0,0,0,129,528,1,0,0,0,131,535,1,0,
0,0,133,541,1,0,0,0,135,546,1,0,0,0,137,551,1,0,0,0,139,561,1,0,0,0,141,
570,1,0,0,0,143,574,1,0,0,0,145,583,1,0,0,0,147,593,1,0,0,0,149,609,1,0,
0,0,151,611,1,0,0,0,153,613,1,0,0,0,155,615,1,0,0,0,157,617,1,0,0,0,159,
619,1,0,0,0,161,621,1,0,0,0,163,623,1,0,0,0,165,625,1,0,0,0,167,627,1,0,
0,0,169,629,1,0,0,0,171,631,1,0,0,0,173,633,1,0,0,0,175,635,1,0,0,0,177,
637,1,0,0,0,179,639,1,0,0,0,181,641,1,0,0,0,183,643,1,0,0,0,185,186,5,69,
0,0,186,187,5,110,0,0,187,188,5,100,0,0,188,2,1,0,0,0,189,190,5,79,0,0,190,
191,5,112,0,0,191,192,5,101,0,0,192,193,5,110,0,0,193,4,1,0,0,0,194,195,
5,79,0,0,195,196,5,117,0,0,196,197,5,116,0,0,197,6,1,0,0,0,198,199,5,73,
0,0,199,200,5,110,0,0,200,8,1,0,0,0,201,202,5,67,0,0,202,203,5,108,0,0,203,
204,5,111,0,0,204,205,5,115,0,0,205,206,5,101,0,0,206,10,1,0,0,0,207,208,
5,73,0,0,208,209,5,110,0,0,209,210,5,112,0,0,210,211,5,117,0,0,211,212,5,
116,0,0,212,12,1,0,0,0,213,214,5,66,0,0,214,215,5,116,0,0,215,216,5,115,
0,0,216,217,5,116,0,0,217,14,1,0,0,0,218,219,5,82,0,0,219,220,5,101,0,0,
220,221,5,112,0,0,221,222,5,101,0,0,222,223,5,97,0,0,223,224,5,116,0,0,224,
16,1,0,0,0,225,226,5,85,0,0,226,227,5,110,0,0,227,228,5,116,0,0,228,229,
5,105,0,0,229,230,5,108,0,0,230,18,1,0,0,0,231,232,5,77,0,0,232,233,5,111,
0,0,233,234,5,117,0,0,234,235,5,115,0,0,235,236,5,101,0,0,236,20,1,0,0,0,
237,238,5,75,0,0,238,239,5,101,0,0,239,240,5,121,0,0,240,22,1,0,0,0,241,
242,5,61,0,0,242,24,1,0,0,0,243,244,5,83,0,0,244,245,5,101,0,0,245,246,5,
116,0,0,246,26,1,0,0,0,247,248,5,66,0,0,248,249,5,117,0,0,249,250,5,102,
0,0,250,251,5,102,0,0,251,252,5,101,0,0,252,253,5,114,0,0,253,28,1,0,0,0,
254,255,5,71,0,0,255,256,5,108,0,0,256,257,5,111,0,0,257,258,5,98,0,0,258,
259,5,97,0,0,259,260,5,108,0,0,260,30,1,0,0,0,261,262,5,84,0,0,262,263,5,
117,0,0,263,264,5,114,0,0,264,265,5,98,0,0,265,266,5,111,0,0,266,32,1,0,
0,0,267,268,5,68,0,0,268,269,5,114,0,0,269,270,5,97,0,0,270,271,5,119,0,
0,271,34,1,0,0,0,272,273,5,76,0,0,273,274,5,111,0,0,274,275,5,99,0,0,275,
276,5,97,0,0,276,277,5,116,0,0,277,278,5,101,0,0,278,36,1,0,0,0,279,280,
5,65,0,0,280,281,5,100,0,0,281,282,5,100,0,0,282,38,1,0,0,0,283,284,5,78,
0,0,284,285,5,85,0,0,285,286,5,77,0,0,286,287,5,66,0,0,287,288,5,69,0,0,
288,289,5,82,0,0,289,40,1,0,0,0,290,291,5,66,0,0,291,292,5,108,0,0,292,293,
5,105,0,0,293,294,5,116,0,0,294,295,5,116,0,0,295,296,5,101,0,0,296,297,
5,114,0,0,297,42,1,0,0,0,298,299,5,67,0,0,299,300,5,111,0,0,300,301,5,112,
0,0,301,302,5,121,0,0,302,44,1,0,0,0,303,304,5,76,0,0,304,305,5,105,0,0,
305,306,5,109,0,0,306,307,5,105,0,0,307,308,5,116,0,0,308,46,1,0,0,0,309,
310,5,70,0,0,310,311,5,105,0,0,311,312,5,108,0,0,312,313,5,108,0,0,313,48,
1,0,0,0,314,315,5,67,0,0,315,316,5,108,0,0,316,317,5,101,0,0,317,318,5,97,
0,0,318,319,5,114,0,0,319,50,1,0,0,0,320,321,5,65,0,0,321,322,5,117,0,0,
322,323,5,116,0,0,323,324,5,111,0,0,324,325,5,98,0,0,325,326,5,97,0,0,326,
327,5,99,0,0,327,328,5,107,0,0,328,52,1,0,0,0,329,330,5,80,0,0,330,331,5,
97,0,0,331,332,5,108,0,0,332,333,5,101,0,0,333,334,5,116,0,0,334,335,5,116,
0,0,335,336,5,101,0,0,336,54,1,0,0,0,337,338,5,68,0,0,338,339,5,111,0,0,
339,340,5,117,0,0,340,341,5,98,0,0,341,342,5,108,0,0,342,343,5,101,0,0,343,
56,1,0,0,0,344,345,5,80,0,0,345,346,5,101,0,0,346,347,5,110,0,0,347,58,1,
0,0,0,348,349,5,67,0,0,349,350,5,108,0,0,350,351,5,115,0,0,351,60,1,0,0,
0,352,353,5,80,0,0,353,354,5,97,0,0,354,355,5,112,0,0,355,356,5,101,0,0,
356,357,5,114,0,0,357,62,1,0,0,0,358,359,5,68,0,0,359,360,5,101,0,0,360,
361,5,103,0,0,361,362,5,114,0,0,362,363,5,101,0,0,363,364,5,101,0,0,364,
64,1,0,0,0,365,366,5,72,0,0,366,367,5,105,0,0,367,368,5,100,0,0,368,369,
5,101,0,0,369,66,1,0,0,0,370,371,5,70,0,0,371,372,5,108,0,0,372,373,5,97,
0,0,373,374,5,115,0,0,374,375,5,104,0,0,375,68,1,0,0,0,376,377,5,79,0,0,
377,378,5,102,0,0,378,379,5,102,0,0,379,70,1,0,0,0,380,381,5,79,0,0,381,
382,5,110,0,0,382,72,1,0,0,0,383,384,5,83,0,0,384,385,5,105,0,0,385,386,
5,110,0,0,386,74,1,0,0,0,387,388,5,67,0,0,388,389,5,111,0,0,389,390,5,115,
0,0,390,76,1,0,0,0,391,392,5,68,0,0,392,393,5,105,0,0,393,394,5,109,0,0,
394,78,1,0,0,0,395,396,5,60,0,0,396,397,5,62,0,0,397,80,1,0,0,0,398,399,
5,62,0,0,399,400,5,61,0,0,400,82,1,0,0,0,401,402,5,62,0,0,402,84,1,0,0,0,
403,404,5,60,0,0,404,405,5,61,0,0,405,86,1,0,0,0,406,407,5,60,0,0,407,88,
1,0,0,0,408,409,5,80,0,0,409,410,5,114,0,0,410,411,5,105,0,0,411,412,5,110,
0,0,412,413,5,116,0,0,413,90,1,0,0,0,414,415,5,83,0,0,415,416,5,99,0,0,416,
417,5,114,0,0,417,418,5,101,0,0,418,419,5,101,0,0,419,420,5,110,0,0,420,
421,5,32,0,0,421,422,5,79,0,0,422,423,5,112,0,0,423,424,5,101,0,0,424,425,
5,110,0,0,425,92,1,0,0,0,426,428,5,45,0,0,427,426,1,0,0,0,427,428,1,0,0,
0,428,430,1,0,0,0,429,431,7,0,0,0,430,429,1,0,0,0,431,432,1,0,0,0,432,430,
1,0,0,0,432,433,1,0,0,0,433,94,1,0,0,0,434,435,5,76,0,0,435,436,5,111,0,
0,436,437,5,119,0,0,437,438,5,114,0,0,438,439,5,101,0,0,439,440,5,115,0,
0,440,96,1,0,0,0,441,442,5,72,0,0,442,443,5,105,0,0,443,444,5,114,0,0,444,
445,5,101,0,0,445,446,5,115,0,0,446,98,1,0,0,0,447,448,5,44,0,0,448,100,
1,0,0,0,449,453,5,39,0,0,450,452,8,1,0,0,451,450,1,0,0,0,452,455,1,0,0,0,
453,451,1,0,0,0,453,454,1,0,0,0,454,456,1,0,0,0,455,453,1,0,0,0,456,457,
6,50,0,0,457,102,1,0,0,0,458,460,7,2,0,0,459,458,1,0,0,0,460,461,1,0,0,0,
461,459,1,0,0,0,461,462,1,0,0,0,462,463,1,0,0,0,463,464,6,51,0,0,464,104,
1,0,0,0,465,466,5,67,0,0,466,467,5,117,0,0,467,468,5,114,0,0,468,469,5,115,
0,0,469,470,5,32,0,0,470,471,5,79,0,0,471,472,5,102,0,0,472,473,5,102,0,
0,473,106,1,0,0,0,474,475,5,67,0,0,475,476,5,117,0,0,476,477,5,114,0,0,477,
478,5,115,0,0,478,479,5,32,0,0,479,480,5,79,0,0,480,481,5,110,0,0,481,108,
1,0,0,0,482,483,5,73,0,0,483,484,5,110,0,0,484,485,5,107,0,0,485,110,1,0,
0,0,486,487,5,84,0,0,487,488,5,101,0,0,488,489,5,120,0,0,489,490,5,116,0,
0,490,112,1,0,0,0,491,495,5,34,0,0,492,494,8,3,0,0,493,492,1,0,0,0,494,497,
1,0,0,0,495,493,1,0,0,0,495,496,1,0,0,0,496,498,1,0,0,0,497,495,1,0,0,0,
498,499,5,34,0,0,499,114,1,0,0,0,500,501,5,68,0,0,501,502,5,111,0,0,502,
116,1,0,0,0,503,504,5,76,0,0,504,505,5,111,0,0,505,506,5,111,0,0,506,507,
5,112,0,0,507,118,1,0,0,0,508,509,5,70,0,0,509,510,5,111,0,0,510,511,5,114,
0,0,511,120,1,0,0,0,512,513,5,84,0,0,513,514,5,111,0,0,514,122,1,0,0,0,515,
516,5,78,0,0,516,517,5,101,0,0,517,518,5,120,0,0,518,519,5,116,0,0,519,124,
1,0,0,0,520,521,5,73,0,0,521,522,5,102,0,0,522,126,1,0,0,0,523,524,5,69,
0,0,524,525,5,108,0,0,525,526,5,115,0,0,526,527,5,101,0,0,527,128,1,0,0,
0,528,529,5,69,0,0,529,530,5,110,0,0,530,531,5,100,0,0,531,532,5,32,0,0,
532,533,5,73,0,0,533,534,5,102,0,0,534,130,1,0,0,0,535,536,5,87,0,0,536,
537,5,104,0,0,537,538,5,105,0,0,538,539,5,108,0,0,539,540,5,101,0,0,540,
132,1,0,0,0,541,542,5,87,0,0,542,543,5,101,0,0,543,544,5,110,0,0,544,545,
5,100,0,0,545,134,1,0,0,0,546,547,5,80,0,0,547,548,5,108,0,0,548,549,5,97,
0,0,549,550,5,121,0,0,550,136,1,0,0,0,551,552,5,80,0,0,552,553,5,114,0,0,
553,554,5,111,0,0,554,555,5,99,0,0,555,556,5,101,0,0,556,557,5,100,0,0,557,
558,5,117,0,0,558,559,5,114,0,0,559,560,5,101,0,0,560,138,1,0,0,0,561,562,
5,69,0,0,562,563,5,110,0,0,563,564,5,100,0,0,564,565,5,32,0,0,565,566,5,
80,0,0,566,567,5,114,0,0,567,568,5,111,0,0,568,569,5,99,0,0,569,140,1,0,
0,0,570,571,5,66,0,0,571,572,5,97,0,0,572,573,5,114,0,0,573,142,1,0,0,0,
574,575,5,87,0,0,575,576,5,97,0,0,576,577,5,105,0,0,577,578,5,116,0,0,578,
579,5,32,0,0,579,580,5,75,0,0,580,581,5,101,0,0,581,582,5,121,0,0,582,144,
1,0,0,0,583,584,5,75,0,0,584,585,5,101,0,0,585,586,5,121,0,0,586,587,5,32,
0,0,587,588,5,83,0,0,588,589,5,116,0,0,589,590,5,97,0,0,590,591,5,116,0,
0,591,592,5,101,0,0,592,146,1,0,0,0,593,597,7,4,0,0,594,596,7,5,0,0,595,
594,1,0,0,0,596,599,1,0,0,0,597,595,1,0,0,0,597,598,1,0,0,0,598,148,1,0,
0,0,599,597,1,0,0,0,600,610,5,61,0,0,601,602,5,60,0,0,602,610,5,62,0,0,603,
604,5,62,0,0,604,610,5,61,0,0,605,610,5,62,0,0,606,607,5,60,0,0,607,610,
5,61,0,0,608,610,5,60,0,0,609,600,1,0,0,0,609,601,1,0,0,0,609,603,1,0,0,
0,609,605,1,0,0,0,609,606,1,0,0,0,609,608,1,0,0,0,610,150,1,0,0,0,611,612,
5,40,0,0,612,152,1,0,0,0,613,614,5,41,0,0,614,154,1,0,0,0,615,616,5,91,0,
0,616,156,1,0,0,0,617,618,5,93,0,0,618,158,1,0,0,0,619,620,5,123,0,0,620,
160,1,0,0,0,621,622,5,125,0,0,622,162,1,0,0,0,623,624,5,36,0,0,624,164,1,
0,0,0,625,626,5,42,0,0,626,166,1,0,0,0,627,628,5,47,0,0,628,168,1,0,0,0,
629,630,5,43,0,0,630,170,1,0,0,0,631,632,5,45,0,0,632,172,1,0,0,0,633,634,
5,58,0,0,634,174,1,0,0,0,635,636,5,59,0,0,636,176,1,0,0,0,637,638,5,46,0,
0,638,178,1,0,0,0,639,640,5,35,0,0,640,180,1,0,0,0,641,642,5,37,0,0,642,
182,1,0,0,0,643,644,5,63,0,0,644,184,1,0,0,0,8,0,427,432,453,461,495,597,
609,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class AMOSLexer extends antlr4.Lexer {

    static grammarFileName = "AMOS.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'End'", "'Open'", "'Out'", "'In'", "'Close'", 
                         "'Input'", "'Btst'", "'Repeat'", "'Until'", "'Mouse'", 
                         "'Key'", "'='", "'Set'", "'Buffer'", "'Global'", 
                         "'Turbo'", "'Draw'", "'Locate'", "'Add'", "'NUMBER'", 
                         "'Blitter'", "'Copy'", "'Limit'", "'Fill'", "'Clear'", 
                         "'Autoback'", "'Palette'", "'Double'", "'Pen'", 
                         "'Cls'", "'Paper'", "'Degree'", "'Hide'", "'Flash'", 
                         "'Off'", "'On'", "'Sin'", "'Cos'", "'Dim'", "'<>'", 
                         "'>='", "'>'", "'<='", "'<'", "'Print'", "'Screen Open'", 
                         null, "'Lowres'", "'Hires'", "','", null, null, 
                         "'Curs Off'", "'Curs On'", "'Ink'", "'Text'", null, 
                         "'Do'", "'Loop'", "'For'", "'To'", "'Next'", "'If'", 
                         "'Else'", "'End If'", "'While'", "'Wend'", "'Play'", 
                         "'Procedure'", "'End Proc'", "'Bar'", "'Wait Key'", 
                         "'Key State'", null, null, "'('", "')'", "'['", 
                         "']'", "'{'", "'}'", "'$'", "'*'", "'/'", "'+'", 
                         "'-'", "':'", "';'", "'.'", "'#'", "'%'", "'?'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, "SCREENOPEN", 
                          "NUMBER", "LOWRES", "HIRES", "COMMA", "COMMENT", 
                          "WS", "CURSOFF", "CURSON", "INK", "TEXT", "STRING", 
                          "DO", "LOOP", "FOR", "TO", "NEXT", "IF", "ELSE", 
                          "ENDIF", "WHILE", "WEND", "PLAY", "PROC", "ENDPROC", 
                          "BAR", "WAITKEY", "KEYSTATE", "IDENTIFIER", "COMPARISON", 
                          "BRACKETOPEN_PROP", "BRACKETCLOSE_PROP", "BRACKETOPEN_ARRAY", 
                          "BRACKETCLOSE_ARRAY", "BRACKETOPEN_FUNCTION", 
                          "BRACKETCLOSE_FUNCTION", "HECADECIMAL", "MULTIPLY", 
                          "DIVIDE", "ADD", "SUBTRACT", "STATEMENT_SEPARATOR", 
                          "FINISH_AND_ADD_OTHER_STATEMENT", "DOT", "HASHTAG", 
                          "PERCENT", "QUESTION" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "T__40", "T__41", "T__42", 
                      "T__43", "T__44", "SCREENOPEN", "NUMBER", "LOWRES", 
                      "HIRES", "COMMA", "COMMENT", "WS", "CURSOFF", "CURSON", 
                      "INK", "TEXT", "STRING", "DO", "LOOP", "FOR", "TO", 
                      "NEXT", "IF", "ELSE", "ENDIF", "WHILE", "WEND", "PLAY", 
                      "PROC", "ENDPROC", "BAR", "WAITKEY", "KEYSTATE", "IDENTIFIER", 
                      "COMPARISON", "BRACKETOPEN_PROP", "BRACKETCLOSE_PROP", 
                      "BRACKETOPEN_ARRAY", "BRACKETCLOSE_ARRAY", "BRACKETOPEN_FUNCTION", 
                      "BRACKETCLOSE_FUNCTION", "HECADECIMAL", "MULTIPLY", 
                      "DIVIDE", "ADD", "SUBTRACT", "STATEMENT_SEPARATOR", 
                      "FINISH_AND_ADD_OTHER_STATEMENT", "DOT", "HASHTAG", 
                      "PERCENT", "QUESTION" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

AMOSLexer.EOF = antlr4.Token.EOF;
AMOSLexer.T__0 = 1;
AMOSLexer.T__1 = 2;
AMOSLexer.T__2 = 3;
AMOSLexer.T__3 = 4;
AMOSLexer.T__4 = 5;
AMOSLexer.T__5 = 6;
AMOSLexer.T__6 = 7;
AMOSLexer.T__7 = 8;
AMOSLexer.T__8 = 9;
AMOSLexer.T__9 = 10;
AMOSLexer.T__10 = 11;
AMOSLexer.T__11 = 12;
AMOSLexer.T__12 = 13;
AMOSLexer.T__13 = 14;
AMOSLexer.T__14 = 15;
AMOSLexer.T__15 = 16;
AMOSLexer.T__16 = 17;
AMOSLexer.T__17 = 18;
AMOSLexer.T__18 = 19;
AMOSLexer.T__19 = 20;
AMOSLexer.T__20 = 21;
AMOSLexer.T__21 = 22;
AMOSLexer.T__22 = 23;
AMOSLexer.T__23 = 24;
AMOSLexer.T__24 = 25;
AMOSLexer.T__25 = 26;
AMOSLexer.T__26 = 27;
AMOSLexer.T__27 = 28;
AMOSLexer.T__28 = 29;
AMOSLexer.T__29 = 30;
AMOSLexer.T__30 = 31;
AMOSLexer.T__31 = 32;
AMOSLexer.T__32 = 33;
AMOSLexer.T__33 = 34;
AMOSLexer.T__34 = 35;
AMOSLexer.T__35 = 36;
AMOSLexer.T__36 = 37;
AMOSLexer.T__37 = 38;
AMOSLexer.T__38 = 39;
AMOSLexer.T__39 = 40;
AMOSLexer.T__40 = 41;
AMOSLexer.T__41 = 42;
AMOSLexer.T__42 = 43;
AMOSLexer.T__43 = 44;
AMOSLexer.T__44 = 45;
AMOSLexer.SCREENOPEN = 46;
AMOSLexer.NUMBER = 47;
AMOSLexer.LOWRES = 48;
AMOSLexer.HIRES = 49;
AMOSLexer.COMMA = 50;
AMOSLexer.COMMENT = 51;
AMOSLexer.WS = 52;
AMOSLexer.CURSOFF = 53;
AMOSLexer.CURSON = 54;
AMOSLexer.INK = 55;
AMOSLexer.TEXT = 56;
AMOSLexer.STRING = 57;
AMOSLexer.DO = 58;
AMOSLexer.LOOP = 59;
AMOSLexer.FOR = 60;
AMOSLexer.TO = 61;
AMOSLexer.NEXT = 62;
AMOSLexer.IF = 63;
AMOSLexer.ELSE = 64;
AMOSLexer.ENDIF = 65;
AMOSLexer.WHILE = 66;
AMOSLexer.WEND = 67;
AMOSLexer.PLAY = 68;
AMOSLexer.PROC = 69;
AMOSLexer.ENDPROC = 70;
AMOSLexer.BAR = 71;
AMOSLexer.WAITKEY = 72;
AMOSLexer.KEYSTATE = 73;
AMOSLexer.IDENTIFIER = 74;
AMOSLexer.COMPARISON = 75;
AMOSLexer.BRACKETOPEN_PROP = 76;
AMOSLexer.BRACKETCLOSE_PROP = 77;
AMOSLexer.BRACKETOPEN_ARRAY = 78;
AMOSLexer.BRACKETCLOSE_ARRAY = 79;
AMOSLexer.BRACKETOPEN_FUNCTION = 80;
AMOSLexer.BRACKETCLOSE_FUNCTION = 81;
AMOSLexer.HECADECIMAL = 82;
AMOSLexer.MULTIPLY = 83;
AMOSLexer.DIVIDE = 84;
AMOSLexer.ADD = 85;
AMOSLexer.SUBTRACT = 86;
AMOSLexer.STATEMENT_SEPARATOR = 87;
AMOSLexer.FINISH_AND_ADD_OTHER_STATEMENT = 88;
AMOSLexer.DOT = 89;
AMOSLexer.HASHTAG = 90;
AMOSLexer.PERCENT = 91;
AMOSLexer.QUESTION = 92;



